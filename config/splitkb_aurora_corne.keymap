/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {

    &led_strip { chain-length = <26>; };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            label = "NEW_MACRO";
            #binding-cells = <0>;
            bindings = <&none>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp ESCAPE  &kp DOUBLE_QUOTES  &kp COMMA  &kp PERIOD           &kp P  &kp Y    &kp F      &kp G          &kp C  &kp R  &kp L       &to 3
     &kp TAB              &kp A      &kp O       &kp E           &kp U  &kp I    &kp D      &kp H          &kp T  &kp N  &kp S   &kp ENTER
&kp LEFT_ALT      &kp SEMICOLON      &kp Q       &kp J           &kp K  &kp X    &kp B      &kp M          &kp W  &kp V  &kp Z  &kp DELETE
                                             &kp LCTRL  &kp LEFT_SHIFT  &to 2    &to 1  &kp SPACE  &kp BACKSPACE
            >;

            label = "Main Layer";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            //&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5      &kp N6    &kp N7  &kp N8     &kp N9  &kp N0  &trans
&trans        &kp EXCL    &kp AT      &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5      &kp F6    &kp F7  &kp F8     &kp F9  &kp F10  &trans
                                        &kp LGUI        &trans         &to 0      &trans    &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL    &kp AT      &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&trans    &trans    &trans  &kp UP_ARROW     &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &trans
&trans    &trans  &kp LEFT      &kp DOWN  &kp RIGHT     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &trans
                                  &trans     &trans      &to 0       &trans     &trans           &trans
            >;
        };

        layer_3 {
            bindings = <
&trans           &trans           &trans           &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &bl BL_TOG     &bl BL_CYCLE           &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                                   &trans  &trans   &to 0    &trans  &trans  &trans
            >;
        };
    };
};
